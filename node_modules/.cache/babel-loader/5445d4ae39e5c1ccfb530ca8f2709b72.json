{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/laboni/CS291/Project3/CS291_project3/chat_app/src/ChatPage.js\";\nimport React, { Component } from 'react';\nimport SendMessageBar from './SendMessageBar';\nimport ActiveUsers from './ActiveUsers';\nimport AllMessages from './AllMessages';\nimport './App.css';\n\nclass ChatPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allMessages: [],\n      token: this.props.token,\n      currentUser: this.props.username,\n      activeUsers: [],\n      url: this.props.url\n    };\n    this.streamSource = new EventSource(this.state.url + \"/stream/\" + this.state.token);\n    this.sendingMessage = this.sendingMessage.bind(this);\n    this.atBottom = false;\n    this.changeOfScrollState = this.changeOfScrollState.bind(this);\n  }\n\n  sendingMessage(message) {\n    console.log(\"Msg received is \", message);\n    var form = new FormData();\n    form.append(\"message\", message);\n    var request = new XMLHttpRequest();\n    request.open(\"POST\", this.state.url + \"/message\");\n    request.setRequestHeader(\"Authorization\", \"Bearer \" + this.state.token);\n    request.send(form);\n  }\n\n  changeOfScrollState(state) {\n    this.atBottom = state;\n  }\n\n  componentDidMount() {\n    /*this.streamSource.addEventListener(\"ServerStatus\", (event) => {\n       \t this.setState({allMessages: [...this.state.allMessages,{'message': JSON.parse(event.data).status, 'user': 'Server', \n       \t'created': JSON.parse(event.data).created}]}) \n    });\n    this.streamSource.addEventListener(\"Message\", (event) => {\n    \tthis.setState({allMessages: [...this.state.allMessages,JSON.parse(event.data)]})\n    });\n     this.streamSource.addEventListener(\"Users\", (event) => {\n    \tthis.setState({activeUsers: JSON.parse(event.data).users})\n    });\n     this.streamSource.addEventListener(\"Join\", (event) => {\n    \tconst tempUsers = new Set(this.state.users)\n    \tconst joinedUser = JSON.parse(event.data).user\n    \tconst messageShown = joinedUser + \" has joined the chat\"\n    \tif(!tempUsers.has(joinedUser)){\n    \t\tthis.setState({activeUsers: [...this.state.activeUsers,joinedUser],\n    \t\tallMessages: [...this.state.allMessages,{'message': messageShown, 'user': 'Server', \n       \t'created': JSON.parse(event.data).created}]})\n    \t  }\t\n    \t\n    });\n     this.streamSource.addEventListener(\"Part\", (event) => {\n    \tconst tempUsers = new Set(this.state.users)\n    \tconst partedUser = JSON.parse(event.data).user\n    \tconst messageShown = partedUser + \" has left the chat\"\n    \ttempUsers.delete(partedUser)\n    \tthis.setState({activeUsers: [...tempUsers],\n    \t\tallMessages: [...this.state.allMessages,{'message': messageShown, 'user': 'Server', \n       \t'created': JSON.parse(event.data).created}]})\t\n    });\n     this.streamSource.addEventListener(\"Disconnect\", (event) => {\n    \tthis.streamSource.close()\n    \tthis.props.onDisconnect()\n    });*/\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ChatPage\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatHeader\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"ChatHeaderBetween\",\n          children: [\" Hey, \", this.state.currentUser, \", you are online! Chat with your friends \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ActiveUsers\",\n        children: [/*#__PURE__*/_jsxDEV(ActiveUsers, {\n          activeUsers: this.state.activeUsers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(AllMessages, {\n          allMessages: this.state.allMessages,\n          changeOfScrollState: this.changeOfScrollState,\n          atBottom: this.atBottom\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Message-input\",\n        children: /*#__PURE__*/_jsxDEV(SendMessageBar, {\n          onSubmit: this.sendingMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default ChatPage;","map":{"version":3,"sources":["/home/laboni/CS291/Project3/CS291_project3/chat_app/src/ChatPage.js"],"names":["React","Component","SendMessageBar","ActiveUsers","AllMessages","ChatPage","constructor","props","state","allMessages","token","currentUser","username","activeUsers","url","streamSource","EventSource","sendingMessage","bind","atBottom","changeOfScrollState","message","console","log","form","FormData","append","request","XMLHttpRequest","open","setRequestHeader","send","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport SendMessageBar from './SendMessageBar';\nimport ActiveUsers from './ActiveUsers';\nimport AllMessages from './AllMessages';\nimport './App.css';\n\nclass ChatPage extends Component{\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t      allMessages: [],\n\t\t      token: this.props.token,\n\t\t      currentUser: this.props.username,\n\t\t      activeUsers: [],\n\t\t      url: this.props.url\n\n\t\t};\n\tthis.streamSource = new EventSource(this.state.url+\"/stream/\"+this.state.token);\n\tthis.sendingMessage=this.sendingMessage.bind(this);\n\tthis.atBottom = false;\n\tthis.changeOfScrollState=this.changeOfScrollState.bind(this);\n}\nsendingMessage(message){\n\tconsole.log(\"Msg received is \",message)\n\tvar form = new FormData();\n\tform.append(\"message\", message);\n\tvar request = new XMLHttpRequest();\n\trequest.open(\"POST\", this.state.url + \"/message\");\n\trequest.setRequestHeader(\n\t        \"Authorization\",\n\t        \"Bearer \" + this.state.token\n\t);\n\trequest.send(form);\n}\nchangeOfScrollState(state){\n\tthis.atBottom = state;\n}\ncomponentDidMount (){\n\t\t/*this.streamSource.addEventListener(\"ServerStatus\", (event) => {\n\t\t   \t this.setState({allMessages: [...this.state.allMessages,{'message': JSON.parse(event.data).status, 'user': 'Server', \n\t\t   \t'created': JSON.parse(event.data).created}]}) \n\t\t});\n\t\tthis.streamSource.addEventListener(\"Message\", (event) => {\n\t\t\tthis.setState({allMessages: [...this.state.allMessages,JSON.parse(event.data)]})\n\t\t});\n\t\t this.streamSource.addEventListener(\"Users\", (event) => {\n\t\t\tthis.setState({activeUsers: JSON.parse(event.data).users})\n\t\t});\n\t\t this.streamSource.addEventListener(\"Join\", (event) => {\n\t\t\tconst tempUsers = new Set(this.state.users)\n\t\t\tconst joinedUser = JSON.parse(event.data).user\n\t\t\tconst messageShown = joinedUser + \" has joined the chat\"\n\t\t\tif(!tempUsers.has(joinedUser)){\n\t\t\t\tthis.setState({activeUsers: [...this.state.activeUsers,joinedUser],\n\t\t\t\tallMessages: [...this.state.allMessages,{'message': messageShown, 'user': 'Server', \n\t\t   \t'created': JSON.parse(event.data).created}]})\n\t\t\t  }\t\n\t\t\t\n\t\t});\n\t\t this.streamSource.addEventListener(\"Part\", (event) => {\n\t\t\tconst tempUsers = new Set(this.state.users)\n\t\t\tconst partedUser = JSON.parse(event.data).user\n\t\t\tconst messageShown = partedUser + \" has left the chat\"\n\t\t\ttempUsers.delete(partedUser)\n\t\t\tthis.setState({activeUsers: [...tempUsers],\n\t\t\t\tallMessages: [...this.state.allMessages,{'message': messageShown, 'user': 'Server', \n\t\t   \t'created': JSON.parse(event.data).created}]})\t\n\t\t});\n\t\t this.streamSource.addEventListener(\"Disconnect\", (event) => {\n\t\t\tthis.streamSource.close()\n\t\t\tthis.props.onDisconnect()\n\t\t});*/\n\n}\nrender(){\n\t\treturn(\n\t\t\t<div className=\"ChatPage\">\n\t\t\t\t<div className=\"chatHeader\">\n\t\t\t\t\t\t<h1 className=\"ChatHeaderBetween\"> Hey, {this.state.currentUser}, you are online! Chat with your friends </h1>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"ActiveUsers\">\n\t\t\t\t\t\t<ActiveUsers activeUsers={this.state.activeUsers} />\n\t\t\t\t\t\t<AllMessages  allMessages={this.state.allMessages}\n\t\t\t\t\t\tchangeOfScrollState={this.changeOfScrollState} \n\t\t\t\t\t\tatBottom={this.atBottom}/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"Message-input\">\n\t\t\t\t\t\t<SendMessageBar onSubmit={this.sendingMessage} />\n\t\t\t\t</div>\t\n\t\t\t\t \n\t\t\t</div>\n\t\t     )\t\t\n\t}\n\n\n}\nexport default ChatPage\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}