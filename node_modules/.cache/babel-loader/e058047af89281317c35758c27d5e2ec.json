{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/laboni/CS291/Project3/CS291_project3/chat_app/src/ChatPage.js\";\nimport React, { Component } from 'react'; //import SendMessageBar from './SendMessageBar';\n//import ActiveUsers from './ActiveUsers';\n//import AllMessages from './AllMessages';\n\nimport './App.css';\n\nclass ChatPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allMessages: [],\n      token: this.props.token,\n      currentUser: this.props.username,\n      activeUsers: [],\n      url: this.props.url\n    };\n    this.streamSource = new EventSource(this.state.url + \"/stream/\" + this.state.token);\n    this.sendingMessage = this.sendingMessage.bind(this);\n    this.atBottom = false;\n    this.changeOfScrollState = this.changeOfScrollState.bind(this);\n    this.getToken = this.getToken.bind(this);\n  }\n\n  getToken(resp) {\n    this.setState({\n      token: resp\n    });\n  }\n\n  sendingMessage(message) {\n    console.log(\"Msg received is \", message);\n    var form = new FormData();\n    form.append(\"message\", message);\n    var request = new XMLHttpRequest();\n    request.open(\"POST\", this.state.url + \"/message\");\n    request.setRequestHeader(\"Authorization\", \"Bearer \" + this.state.token);\n    request.send(form);\n  }\n\n  changeOfScrollState(state) {\n    this.atBottom = state;\n  }\n\n  componentDidMount() {\n    this.streamSource.addEventListener(\"ServerStatus\", event => {\n      this.setState({\n        allMessages: [...this.state.allMessages, {\n          'message': JSON.parse(event.data).status,\n          'user': 'Server',\n          'created': JSON.parse(event.data).created\n        }]\n      });\n    });\n    this.streamSource.addEventListener(\"Message\", event => {\n      this.setState({\n        allMessages: [...this.state.allMessages, JSON.parse(event.data)]\n      });\n    });\n    this.streamSource.addEventListener(\"Users\", event => {\n      this.setState({\n        activeUsers: JSON.parse(event.data).users\n      });\n    });\n    this.streamSource.addEventListener(\"Join\", event => {\n      console.log(event, \"------------------\");\n      const tempUsers = new Set(this.state.users);\n      const joinedUser = JSON.parse(event.data).user;\n      const messageShown = joinedUser + \" has joined the chat\";\n\n      if (!tempUsers.has(joinedUser)) {\n        this.setState({\n          activeUsers: [...this.state.activeUsers, joinedUser],\n          allMessages: [...this.state.allMessages, {\n            'message': messageShown,\n            'user': 'Server',\n            'created': JSON.parse(event.data).created\n          }]\n        });\n      }\n    });\n    this.streamSource.addEventListener(\"Part\", event => {\n      const tempUsers = new Set(this.state.users);\n      const partedUser = JSON.parse(event.data).user;\n      const messageShown = partedUser + \" has left the chat\";\n      tempUsers.delete(partedUser);\n      this.setState({\n        activeUsers: [...tempUsers],\n        allMessages: [...this.state.allMessages, {\n          'message': messageShown,\n          'user': 'Server',\n          'created': JSON.parse(event.data).created\n        }]\n      });\n    });\n    this.streamSource.addEventListener(\"Disconnect\", event => {\n      console.log(\"disconnect event\");\n      this.streamSource.close();\n      this.props.onDisconnect();\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ChatPage\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatHeader\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"ChatHeaderBetween\",\n          children: [\" Hey, \", this.state.currentUser, \", you are online! Chat with your friends \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default ChatPage;","map":{"version":3,"sources":["/home/laboni/CS291/Project3/CS291_project3/chat_app/src/ChatPage.js"],"names":["React","Component","ChatPage","constructor","props","state","allMessages","token","currentUser","username","activeUsers","url","streamSource","EventSource","sendingMessage","bind","atBottom","changeOfScrollState","getToken","resp","setState","message","console","log","form","FormData","append","request","XMLHttpRequest","open","setRequestHeader","send","componentDidMount","addEventListener","event","JSON","parse","data","status","created","users","tempUsers","Set","joinedUser","user","messageShown","has","partedUser","delete","close","onDisconnect","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n//import SendMessageBar from './SendMessageBar';\n//import ActiveUsers from './ActiveUsers';\n//import AllMessages from './AllMessages';\nimport './App.css';\n\nclass ChatPage extends Component{\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t      allMessages: [],\n\t\t      token: this.props.token,\n\t\t      currentUser: this.props.username,\n\t\t      activeUsers: [],\n\t\t      url: this.props.url\n\n\t\t};\n\tthis.streamSource = new EventSource(this.state.url+\"/stream/\"+this.state.token);\n\tthis.sendingMessage=this.sendingMessage.bind(this);\n\tthis.atBottom = false;\n\tthis.changeOfScrollState=this.changeOfScrollState.bind(this);\n\tthis.getToken = this.getToken.bind(this);\n}\ngetToken(resp){\n\t\tthis.setState({token: resp})\n\t}\nsendingMessage(message){\n\tconsole.log(\"Msg received is \",message)\n\tvar form = new FormData();\n\tform.append(\"message\", message);\n\tvar request = new XMLHttpRequest();\n\trequest.open(\"POST\", this.state.url + \"/message\");\n\trequest.setRequestHeader(\n\t        \"Authorization\",\n\t        \"Bearer \" + this.state.token\n\t);\n\trequest.send(form);\n}\nchangeOfScrollState(state){\n\tthis.atBottom = state;\n}\ncomponentDidMount (){\n\t\tthis.streamSource.addEventListener(\"ServerStatus\", (event) => {\n\t\t   \t this.setState({allMessages: [...this.state.allMessages,\n{'message': JSON.parse(event.data).status, 'user': 'Server', 'created': JSON.parse(event.data).created}]}) \n\t\t});\n\t\tthis.streamSource.addEventListener(\"Message\", (event) => {\n\t\t\tthis.setState({allMessages: [...this.state.allMessages,JSON.parse(event.data)]})\n\t\t});\n\t\t this.streamSource.addEventListener(\"Users\", (event) => {\n\t\t\tthis.setState({activeUsers: JSON.parse(event.data).users})\n\t\t});\n\t\t this.streamSource.addEventListener(\"Join\", (event) => {\n\t\t\tconsole.log(event, \"------------------\")\n\t\t\tconst tempUsers = new Set(this.state.users)\n\t\t\tconst joinedUser = JSON.parse(event.data).user\n\t\t\tconst messageShown = joinedUser + \" has joined the chat\"\n\t\t\tif(!tempUsers.has(joinedUser)){\n\t\t\t\tthis.setState({activeUsers: [...this.state.activeUsers,joinedUser],\n\t\t\t\tallMessages: [...this.state.allMessages,{'message': messageShown, 'user': 'Server', \n\t\t   \t'created': JSON.parse(event.data).created}]})\n\t\t\t  }\t\n\t\t\t\n\t\t});\n\t\t this.streamSource.addEventListener(\"Part\", (event) => {\n\t\t\tconst tempUsers = new Set(this.state.users)\n\t\t\tconst partedUser = JSON.parse(event.data).user\n\t\t\tconst messageShown = partedUser + \" has left the chat\"\n\t\t\ttempUsers.delete(partedUser)\n\t\t\tthis.setState({activeUsers: [...tempUsers],\n\t\t\t\tallMessages: [...this.state.allMessages,{'message': messageShown, 'user': 'Server', \n\t\t   \t'created': JSON.parse(event.data).created}]})\t\n\t\t});\n\t\t this.streamSource.addEventListener(\"Disconnect\", (event) => {\n\t\t\tconsole.log(\"disconnect event\")\n\t\t\tthis.streamSource.close()\n\t\t\tthis.props.onDisconnect()\n\t\t});\n\n}\n\n\nrender(){\n\t\treturn(\n\t\t\t<div className=\"ChatPage\">\n\t\t\t\t<div className=\"chatHeader\">\n\t\t\t\t\t\t<h1 className=\"ChatHeaderBetween\"> Hey, {this.state.currentUser}, you are online! Chat with your friends </h1>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t \n\t\t\t</div>\n\t\t     )\t\t\n\t}\n\n\n}\nexport default ChatPage\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}