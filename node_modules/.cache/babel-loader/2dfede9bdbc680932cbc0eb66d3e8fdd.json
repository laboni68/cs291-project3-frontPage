{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/laboni/CS291/Project3/CS291_project3/chat_app/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport LoginPage from './LoginPage'; //import ChatPage from './ChatPage'\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      currentScreen: sessionStorage.getItem('currentScreen') || 'LoginScreen',\n      currentUsername: sessionStorage.getItem('currentUsername') || '',\n      token: sessionStorage.getItem('token') || '',\n      url: 'http://localhost:4567/'\n    };\n    this.onUserloginSubmit = this.onUserloginSubmit.bind(this);\n    this.onDisconnect = this.onDisconnect.bind(this);\n  }\n\n  loginPageSubmit(username, password, url) {\n    console.log(\"...............\", username, password, url); // const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n\n    var request = new XMLHttpRequest();\n    var form = new FormData();\n    form.append(\"password\", password);\n    form.append(\"username\", username);\n    sessionStorage.url = url;\n    request.open(\"POST\", sessionStorage.url + \"/login\");\n    console.log(\"......................OPEN POST DONE\");\n\n    request.onreadystatechange = function () {\n      console.log(\"......................\", request);\n      console.log(\"Request status\", request.status);\n      if (request.readyState !== 4) return;\n\n      if (request.status === 201) {\n        sessionStorage.setItem('token', JSON.parse(request.responseText).token);\n        sessionStorage.setItem('currentScreen', \"ChatScreen\");\n        sessionStorage.setItem('currentUsername', username);\n        this.setState({\n          currentUsername: username,\n          currentScreen: sessionStorage.getItem('currentScreen'),\n          token: sessionStorage.getItem('token')\n        });\n      } else if (this.status === 403) {\n        alert(\"Invalid username or password\");\n      } else {\n        console.log(\"Request is \", request, \"...END\");\n        alert(this.status + \" failure to /login\");\n      }\n    }.bind(this);\n\n    request.send(form);\n  }\n\n  onDisconnect() {\n    this.setState({\n      currentScreen: 'LoginScreen'\n    });\n  } // setNewState(newState, username){\n  //     sessionStorage.setItem('currentScreen',newState)\n  //   }\n\n\n  render() {\n    if (this.state.currentScreen === 'LoginScreen') {\n      return /*#__PURE__*/_jsxDEV(LoginPage, {\n        onSubmit: this.loginPageSubmit,\n        url: this.state.url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this);\n    }\n    /* else if(this.state.currentScreen === 'ChatScreen'){\n       return <ChatPage token={this.state.token}\n                          username ={this.state.currentUsername}\n                          url={sessionStorage.url}\n                          onDisconnect={this.onDisconnect} />\n     }*/\n\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/laboni/CS291/Project3/CS291_project3/chat_app/src/App.js"],"names":["React","Component","LoginPage","App","constructor","state","currentScreen","sessionStorage","getItem","currentUsername","token","url","onUserloginSubmit","bind","onDisconnect","loginPageSubmit","username","password","console","log","request","XMLHttpRequest","form","FormData","append","open","onreadystatechange","status","readyState","setItem","JSON","parse","responseText","setState","alert","send","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport LoginPage from './LoginPage'\n//import ChatPage from './ChatPage'\n\nclass App extends Component {\n  constructor(){\n    super()\n    this.state = {\n      currentScreen: sessionStorage.getItem( 'currentScreen' ) || 'LoginScreen',\n      currentUsername: sessionStorage.getItem( 'currentUsername' ) || '',\n      token: sessionStorage.getItem( 'token' ) || '',\n      url: 'http://localhost:4567/'\n    }\n    this.onUserloginSubmit = this.onUserloginSubmit.bind(this)\n    this.onDisconnect = this.onDisconnect.bind(this)\n  }\n\n  loginPageSubmit (username, password, url){\n    console.log(\"...............\",username,password,url);\n    // const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n    var request = new XMLHttpRequest();\n    var form = new FormData();\n    form.append(\"password\", password);\n    form.append(\"username\", username);\n    sessionStorage.url = url;\n    request.open(\"POST\", sessionStorage.url + \"/login\");\n    console.log(\"......................OPEN POST DONE\");\n    request.onreadystatechange = function(){\n        console.log(\"......................\",request);\n        console.log(\"Request status\",request.status);\n        if (request.readyState !== 4) return;\n        if (request.status === 201) {\n            sessionStorage.setItem( 'token', JSON.parse(request.responseText).token);\n            sessionStorage.setItem( 'currentScreen',\"ChatScreen\");\n            sessionStorage.setItem( 'currentUsername',username);\n            this.setState({\n            currentUsername: username,\n            currentScreen: sessionStorage.getItem( 'currentScreen'),\n            token: sessionStorage.getItem( 'token' )\n            });\n        } else if (this.status === 403) {\n            alert(\"Invalid username or password\");\n        } else {\n            console.log(\"Request is \", request, \"...END\");\n            alert(this.status + \" failure to /login\");\n        }\n    }.bind(this);\n    request.send(form);  \n    \n  }\n  onDisconnect(){\n    this.setState({currentScreen: 'LoginScreen'})\n  }\n  // setNewState(newState, username){\n\n  //     sessionStorage.setItem('currentScreen',newState)\n  //   }\n  render() {\n    if(this.state.currentScreen === 'LoginScreen'){\n     return <LoginPage onSubmit={this.loginPageSubmit} \n     url={this.state.url}/>\n    }\n   /* else if(this.state.currentScreen === 'ChatScreen'){\n      return <ChatPage token={this.state.token}\n                         username ={this.state.currentUsername}\n                         url={sessionStorage.url}\n                         onDisconnect={this.onDisconnect} />\n    }*/\n\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}