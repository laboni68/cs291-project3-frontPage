{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/laboni/CS291/Project3/CS291_project3/chat_app/src/AllMessages.js\";\nimport React from 'react';\nimport './App.css';\nimport PopUpScreen from './PopUpScreen';\n\nclass AllMessages extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.scrollToBottom = () => {\n      this.messagesEnd.scrollIntoView({\n        behavior: \"smooth\"\n      });\n      this.props.changeScrollState(true);\n      console.log(\"At bottom: \", true);\n    };\n\n    this.state = {\n      showPopUp: false\n    };\n    this.atBottom = true;\n    this.messageFromSelf = true;\n    this.togglePopUp = this.togglePopUp.bind(this);\n  }\n\n  togglePopUp() {\n    console.log(\"in pop up\");\n    this.messagesEnd.scrollIntoView({\n      behavior: \"smooth\"\n    });\n    this.props.changeOfScrollState(true);\n    this.atBottom = true;\n    this.setState({\n      showPopUp: false\n    });\n  }\n\n  componentDidMount() {\n    if (!this.props.atBottom && this.messageFromSelf) {\n      this.scrollToBottom();\n    } else if (this.props.atBottom) {\n      this.scrollToBottom();\n    }\n  }\n\n  componentDidUpdate() {\n    if (!this.props.atBottom && this.messageFromSelf) {\n      this.scrollToBottom();\n    } else if (this.props.atBottom) {\n      this.scrollToBottom();\n    }\n  }\n\n  ListMessages(m) {\n    console.log(\"in list msg\");\n    const whoSentMsg = m.user;\n    const msg = m.message; //console.log(m.created)\n\n    var date = new Date(m.created * 1000);\n    var hours = date.getHours();\n    var minutes = \"0\" + date.getMinutes();\n    const created = hours + ':' + minutes.substr(-2);\n    var sender = whoSentMsg;\n    var msgType = 'Message';\n\n    if (whoSentMsg === 'Server') {\n      const msgType = 'Server';\n      const sender = '';\n    }\n\n    const currentMember = sessionStorage.getItem('currentUsername');\n    var className = \"\";\n\n    if (sender === currentMember) {\n      this.messageFromSelf = true;\n      className = \"Messages-currentMember\";\n    } else {\n      this.messageFromSelf = false;\n      className = \"Messages-other\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: msgType,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: className,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Message-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"username\",\n            children: sender\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text\",\n              children: msg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"created\",\n              children: created\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n\n  ScrollLogic(e) {\n    console.log(\"in scroll logic\");\n    let element = e.target;\n\n    if (element.scrollHeight - element.scrollTop - 1 < element.clientHeight) {\n      this.props.changeOfScrollState(true);\n      this.atBottom = true;\n      this.setState({\n        showPopUp: false\n      });\n    } else {\n      this.props.changeOfScrollState(false);\n      this.atBottom = false;\n    }\n  }\n\n  render() {\n    console.log(\"showPopup: \", this.state.showPopUp);\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"MessageList\",\n      onScroll: this.ScrollLogic,\n      children: [this.props.allMessages.map(m => this.ListMessages(m)), this.state.showPopUp || !this.atBottom ? /*#__PURE__*/_jsxDEV(PopUpScreen, {\n        PopUp: this.togglePopUp.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 45\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          float: \"left\",\n          clear: \"both\"\n        },\n        ref: el => {\n          this.messagesEnd = el;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default AllMessages;","map":{"version":3,"sources":["/home/laboni/CS291/Project3/CS291_project3/chat_app/src/AllMessages.js"],"names":["React","PopUpScreen","AllMessages","Component","constructor","props","scrollToBottom","messagesEnd","scrollIntoView","behavior","changeScrollState","console","log","state","showPopUp","atBottom","messageFromSelf","togglePopUp","bind","changeOfScrollState","setState","componentDidMount","componentDidUpdate","ListMessages","m","whoSentMsg","user","msg","message","date","Date","created","hours","getHours","minutes","getMinutes","substr","sender","msgType","currentMember","sessionStorage","getItem","className","ScrollLogic","e","element","target","scrollHeight","scrollTop","clientHeight","render","allMessages","map","float","clear","el"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './App.css';\nimport PopUpScreen from './PopUpScreen'\nclass AllMessages extends React.Component{\n\tconstructor(props){\n    \t\tsuper(props)\n   \t\t this.state = { showPopUp: false }\n\tthis.atBottom = true\n        this.messageFromSelf = true\n\tthis.togglePopUp=this.togglePopUp.bind(this)\n  \t}\ntogglePopUp(){\n\tconsole.log(\"in pop up\")\n\tthis.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\n        this.props.changeOfScrollState(true);\n\tthis.atBottom = true;\n        this.setState({showPopUp: false})\n}\n  componentDidMount() {\n    if(!this.props.atBottom && this.messageFromSelf){\n            this.scrollToBottom();}\n    else if(this.props.atBottom){\n          this.scrollToBottom();}\n  }\n  \n  componentDidUpdate() {\n    if(!this.props.atBottom && this.messageFromSelf){\n            this.scrollToBottom();}\n    else if(this.props.atBottom){\n          this.scrollToBottom();}\n  }\n\n  scrollToBottom = () => { \n    this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\n    this.props.changeScrollState(true);\n    console.log(\"At bottom: \",true)\n    \n  }\nListMessages(m){\n\tconsole.log(\"in list msg\")\n    const whoSentMsg = m.user;\n    const msg = m.message;\n    //console.log(m.created)\n    var date = new Date(m.created*1000);\n    var hours = date.getHours();\n    var minutes = \"0\" + date.getMinutes();\n    const created = hours + ':' + minutes.substr(-2)\n    var sender=whoSentMsg\n    var msgType = 'Message'\n    if (whoSentMsg === 'Server'){\n\tconst msgType = 'Server'\n\tconst sender = ''}\n    const currentMember = sessionStorage.getItem( 'currentUsername' );\n    var className=\"\"\n    if(sender === currentMember){\n      this.messageFromSelf = true\n      className = \"Messages-currentMember\"}\n    else{\n      this.messageFromSelf = false\n      className = \"Messages-other\"}\n    return (\n      <li className={msgType} >\n      \t<div className = {className}>\n  \t      <div className=\"Message-content\">\n  \t        <div className=\"username\">\n  \t          {sender}\n  \t        </div>\n  \t        <div className=\"message\">\n  \t\t      <div className=\"text\">{msg}</div>\n  \t\t      <div className=\"created\">{created}</div>\n  \t        </div>\n  \t      </div>\n  \t    </div>\n      </li>\n    );\n  }\n\nScrollLogic(e){\n    console.log(\"in scroll logic\")\n    let element = e.target\n    if (element.scrollHeight - element.scrollTop - 1 < element.clientHeight) {\n      this.props.changeOfScrollState(true); \n      this.atBottom = true\n      this.setState({showPopUp: false})\n    }\n    else{\n      this.props.changeOfScrollState(false);  \n      this.atBottom = false\n    }\n}\nrender(){\nconsole.log(\"showPopup: \", this.state.showPopUp)\n\treturn (\n      <ul className = \"MessageList\" onScroll={this.ScrollLogic}>\n        {this.props.allMessages.map(m => this.ListMessages(m))}\n\t{(this.state.showPopUp || !this.atBottom)? <PopUpScreen PopUp={this.togglePopUp.bind(this)}/>: null}\n\t\n        <li style={{ float:\"left\", clear: \"both\" }}\n        ref={(el) => { this.messagesEnd = el; }}>\n        </li>\n      </ul>\n    );\n}\n}\nexport default AllMessages\n"]},"metadata":{},"sourceType":"module"}