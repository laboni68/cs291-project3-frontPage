{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/laboni/CS291/Project3/CS291_project3/chat_app/src/ChatPage.js\";\nimport React, { Component } from 'react';\nimport MessageList from './MessageList';\nimport SendMessageForm from './SendMessageForm';\nimport OnlineUsers from './OnlineUsers';\nimport './App.css';\n\nclass ChatScreen extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: [],\n      token: this.props.token,\n      currentUser: this.props.username,\n      users: [],\n      url: this.props.url\n    };\n    this.atBottom = false;\n    this.streamSource = new EventSource(this.state.url + \"/stream/\" + this.state.token);\n    this.getToken = this.getToken.bind(this);\n    this.setMessageList = this.setMessageList.bind(this);\n    this.sendMessage = this.sendMessage.bind(this);\n    this.setUsersList = this.setUsersList.bind(this);\n    this.joinUsersList = this.joinUsersList.bind(this);\n    this.partUsersList = this.partUsersList.bind(this);\n    this.changeScrollState = this.changeScrollState.bind(this);\n  }\n\n  getToken(resp) {\n    this.setState({\n      token: resp\n    });\n  }\n\n  setMessageList(resp) {\n    this.setState({\n      messages: [...this.state.messages, resp]\n    });\n  }\n\n  joinUsersList(resp) {\n    const tempUsers = new Set(this.state.users);\n    const joiningUser = resp.message;\n    const joiningMessage = joiningUser + \" has joined the chat\";\n    resp.message = joiningMessage;\n\n    if (!tempUsers.has(joiningUser)) {\n      this.setState({\n        users: [...this.state.users, joiningUser],\n        messages: [...this.state.messages, resp]\n      });\n    }\n  }\n\n  partUsersList(resp) {\n    const tempUsers = new Set(this.state.users);\n    const partingUser = resp.message;\n    const partingMessage = partingUser + \" has left the chat\";\n    resp.message = partingMessage;\n    tempUsers.delete(partingUser);\n    this.setState({\n      users: [...tempUsers],\n      messages: [...this.state.messages, resp]\n    });\n  }\n\n  setUsersList(resp) {\n    this.setState({\n      users: resp\n    });\n  }\n\n  disconnectConnection() {\n    this.streamSource.close();\n    this.props.onDisconnect();\n  }\n\n  componentDidMount() {\n    //this.scrollToBottom();\n    this.streamSource.addEventListener(\"ServerStatus\", event => {\n      console.log(\"in Server Status....\", event, \"<.......\");\n      this.setMessageList({\n        'message': JSON.parse(event.data).status,\n        'user': 'Server',\n        'created': JSON.parse(event.data).created\n      });\n    });\n    this.streamSource.addEventListener(\"Message\", event => {\n      console.log(\"in message....\", event, \"<.......\");\n      this.setMessageList(JSON.parse(event.data));\n    });\n    this.streamSource.addEventListener(\"Users\", event => {\n      console.log(\"in users....\", event, \"<.......\");\n      this.setUsersList(JSON.parse(event.data).users);\n    });\n    this.streamSource.addEventListener(\"Join\", event => {\n      console.log(\"in join....\", event, \"<.......\");\n      this.joinUsersList({\n        'message': JSON.parse(event.data).user,\n        'user': 'Server',\n        'created': JSON.parse(event.data).created\n      });\n    });\n    this.streamSource.addEventListener(\"Part\", event => {\n      console.log(\"in part....\", event, \"<.......\");\n      this.partUsersList({\n        'message': JSON.parse(event.data).user,\n        'user': 'Server',\n        'created': JSON.parse(event.data).created\n      });\n    });\n    this.streamSource.addEventListener(\"Disconnect\", event => {\n      console.log(\"in disconnect....\", event, \"<.......\");\n      this.disconnectConnection();\n    });\n  }\n\n  sendMessage(message) {\n    var form = new FormData();\n    form.append(\"message\", message);\n    const url = this.state.url;\n    var request = new XMLHttpRequest();\n    request.open(\"POST\", url + \"/message\");\n    request.setRequestHeader(\"Authorization\", \"Bearer \" + this.state.token);\n    request.send(form);\n  }\n\n  changeScrollState(state) {\n    this.atBottom = state;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ChatScreen\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ChatHeader\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"ChatHeaderText\",\n          children: [\"Hello! \", this.state.currentUser]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: this.messageListRef,\n        className: \"ChatDetails\",\n        children: [/*#__PURE__*/_jsxDEV(OnlineUsers, {\n          onlineUsers: this.state.users\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(MessageList, {\n          messages: this.state.messages,\n          changeScrollState: this.changeScrollState,\n          atBottom: this.atBottom\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Message-input-block\",\n        children: /*#__PURE__*/_jsxDEV(SendMessageForm, {\n          onSubmit: this.sendMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default ChatScreen;","map":{"version":3,"sources":["/home/laboni/CS291/Project3/CS291_project3/chat_app/src/ChatPage.js"],"names":["React","Component","MessageList","SendMessageForm","OnlineUsers","ChatScreen","constructor","props","state","messages","token","currentUser","username","users","url","atBottom","streamSource","EventSource","getToken","bind","setMessageList","sendMessage","setUsersList","joinUsersList","partUsersList","changeScrollState","resp","setState","tempUsers","Set","joiningUser","message","joiningMessage","has","partingUser","partingMessage","delete","disconnectConnection","close","onDisconnect","componentDidMount","addEventListener","event","console","log","JSON","parse","data","status","created","user","form","FormData","append","request","XMLHttpRequest","open","setRequestHeader","send","render","messageListRef"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport MessageList from './MessageList'\r\nimport SendMessageForm from './SendMessageForm'\r\nimport OnlineUsers from './OnlineUsers'\r\nimport './App.css';\r\n\r\nclass ChatScreen extends Component{\r\n\tconstructor(props) {\r\n\t    super(props);\r\n\t\t    this.state = {\r\n\t\t      messages: [],\r\n\t\t      token: this.props.token,\r\n\t\t      currentUser: this.props.username,\r\n\t\t      users: [],\r\n\t\t      url: this.props.url\r\n\r\n\t\t};\r\n\t\tthis.atBottom = false\r\n\t\tthis.streamSource = new EventSource(this.state.url+\"/stream/\"+this.state.token);\r\n\t\tthis.getToken = this.getToken.bind(this);\r\n\t\tthis.setMessageList = this.setMessageList.bind(this);\r\n\t\tthis.sendMessage = this.sendMessage.bind(this);\r\n\t\tthis.setUsersList = this.setUsersList.bind(this);\r\n\t\tthis.joinUsersList = this.joinUsersList.bind(this);\r\n\t\tthis.partUsersList = this.partUsersList.bind(this);\r\n\t\tthis.changeScrollState = this.changeScrollState.bind(this);\r\n  }\r\n  \tgetToken(resp){\r\n\t\tthis.setState({token: resp})\r\n\t}\r\n\r\n\tsetMessageList(resp){\r\n\t\t\r\n\t\tthis.setState({messages: [...this.state.messages,resp]})\t\r\n\t}\r\n\tjoinUsersList(resp){\r\n\t\tconst tempUsers = new Set(this.state.users)\r\n\t\tconst joiningUser = resp.message\r\n\t\tconst joiningMessage = joiningUser + \" has joined the chat\"\r\n\t\tresp.message = joiningMessage\r\n\t\tif(!tempUsers.has(joiningUser)){\r\n\t\t\tthis.setState({users: [...this.state.users,joiningUser],\r\n\t\t\tmessages: [...this.state.messages,resp]})\r\n\t\t}\t\t\r\n\t}\r\n\tpartUsersList(resp){\r\n\t\tconst tempUsers = new Set(this.state.users)\r\n\t\tconst partingUser = resp.message\r\n\t\tconst partingMessage = partingUser + \" has left the chat\"\r\n\t\tresp.message = partingMessage\r\n\t\ttempUsers.delete(partingUser)\r\n\t\tthis.setState({users: [...tempUsers],\r\n\t\tmessages: [...this.state.messages,resp]})\r\n\t}\r\n\tsetUsersList(resp){\r\n\t\tthis.setState({users: resp})\r\n\t}\r\n\r\n\tdisconnectConnection(){\r\n\t\tthis.streamSource.close()\r\n\t\tthis.props.onDisconnect()\r\n\t}\r\n\tcomponentDidMount (){\r\n\t\t//this.scrollToBottom();\r\n\t\t this.streamSource.addEventListener(\"ServerStatus\", (event) => {\r\n\t\t\tconsole.log(\"in Server Status....\",event,\"<.......\");\r\n\t\t   this.setMessageList({'message': JSON.parse(event.data).status, 'user': 'Server', \r\n\t\t   \t'created': JSON.parse(event.data).created})\t\t  \r\n\t\t});\r\n\t\t this.streamSource.addEventListener(\"Message\", (event) => {\r\n\t\t\tconsole.log(\"in message....\",event,\"<.......\");\r\n\t\t   this.setMessageList(JSON.parse(event.data))\r\n\t\t});\r\n\t\t this.streamSource.addEventListener(\"Users\", (event) => {\r\n\t\t\tconsole.log(\"in users....\",event,\"<.......\");\r\n\t\t   this.setUsersList(JSON.parse(event.data).users)\r\n\t\t});\r\n\t\t this.streamSource.addEventListener(\"Join\", (event) => {\r\n\t\t\tconsole.log(\"in join....\",event,\"<.......\");\r\n\t\t   this.joinUsersList({'message': JSON.parse(event.data).user, 'user': 'Server', \r\n\t\t   \t'created': JSON.parse(event.data).created})\r\n\t\t});\r\n\t\t this.streamSource.addEventListener(\"Part\", (event) => {\r\n\t\t\tconsole.log(\"in part....\",event,\"<.......\");\r\n\t\t   this.partUsersList({'message': JSON.parse(event.data).user, 'user': 'Server', \r\n\t\t   \t'created': JSON.parse(event.data).created})\r\n\t\t});\r\n\t\t this.streamSource.addEventListener(\"Disconnect\", (event) => {\r\n\t\t\tconsole.log(\"in disconnect....\",event,\"<.......\");\r\n\t\t   this.disconnectConnection()\r\n\t\t});\r\n\t}\r\n\tsendMessage(message){\r\n\t\tvar form = new FormData();\r\n\t    form.append(\"message\", message);\r\n\t    const url = this.state.url;\r\n\t    var request = new XMLHttpRequest();\r\n\t    request.open(\"POST\", url + \"/message\");\r\n\t    request.setRequestHeader(\r\n\t        \"Authorization\",\r\n\t        \"Bearer \" + this.state.token\r\n\t    );\r\n\t    request.send(form);\r\n\t}\r\n\tchangeScrollState(state){\r\n\t\tthis.atBottom = state\r\n\t}\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div className=\"ChatScreen\">\r\n\t\t\t\t<div className=\"ChatHeader\">\r\n\t\t\t\t\t<h1 className=\"ChatHeaderText\">Hello! {this.state.currentUser}</h1>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div ref={this.messageListRef} className=\"ChatDetails\">\r\n\t\t\t\t\t<OnlineUsers onlineUsers={this.state.users}/>\r\n\t\t\t\t\t<MessageList  messages={this.state.messages}\r\n\t\t\t\t\t\t\t\tchangeScrollState={this.changeScrollState} \r\n\t\t\t\t\t\t\t\tatBottom={this.atBottom}/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"Message-input-block\">\r\n\t\t\t\t\t<SendMessageForm onSubmit={this.sendMessage} />\r\n\t\t\t\t</div>\r\n\t\t\t\t \r\n\t\t\t</div>\r\n\t\t\t)\t\t\r\n\t}\r\n}\r\nexport default ChatScreen"]},"metadata":{},"sourceType":"module"}